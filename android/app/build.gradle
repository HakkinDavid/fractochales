apply plugin: 'com.android.application'

// def stdout = new ByteArrayOutputStream()
// exec {
//     commandLine 'git', 'rev-list', '--count', 'HEAD'
//     standardOutput = stdout
// }

def VERSION_NUM = 306
def VERSION_NUM_SCALED = Integer.valueOf(VERSION_NUM ?: 100)
def VERSION_NUM_SCALED_STR = (VERSION_NUM_SCALED/100).toString()

android {
    compileSdk 33
    defaultConfig {
        applicationId "dev.bonsanbec.fractochales"
        minSdk 21
        targetSdk 35
        versionCode VERSION_NUM_SCALED
        versionName "$VERSION_NUM_SCALED_STR"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            ndkBuild {
                cppFlags "-DVERSION=$VERSION_NUM"
            }

        }
        ndk {
            abiFilters "arm64-v8a" //'armeabi-v7a', 'x86', "arm64-v8a", "x86_64" (lista completa)
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        ndkBuild {
            path "src/main/jni/Android.mk"
        }
    }
    namespace 'dev.bonsanbec.fractochales'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
}

task copyAssets {
    copy {
        from "../../fonts"
        into "src/main/assets/fonts"
    }
    copy {
        from "../../images"
        into "src/main/assets/images"
    }
    copy {
        from "../../sfx"
        into "src/main/assets/sfx"
    }
}

preBuild.dependsOn(copyAssets)